
@{
    ViewBag.Title = "Chat";
}

<div class="info">
    <div id="reciever">
        @Model.group.Name
    </div>
    <button id="disconnect" class="btn-danger btn-lg">Disconnect</button>
</div>

<div id="recieverId" style="display:none">
    @Model.group.Id
</div>
<div id="myName" style="display:none">@System.Web.HttpContext.Current.User.Identity.Name</div>

<div class="container box">
    <div id="messages">
        @foreach (var msg in Model.messages)
        {
            if (msg.From == @Model.myId)
            {
                <div class="right">
                    <div class="senderMe">@msg.FromName</div>
                    <div class="message">@msg.MessageText</div>
                    <div class="date">@msg.Date</div>
                </div>
            }
            else
            {
                <div class="left">          
                    <div class="sender">@msg.FromName</div>
                    <div class="message">@msg.MessageText</div>
                    <div class="date">@msg.Date</div>                 
                </div>
            }
        }
    </div>
    <div id="send">
        <input type="text" id="message" placeholder="Type message..." />
        <input type="button" class="btn-info btn-lg" id="sendmessage" value="Send" />
    </div>
</div>

<style>
    .box {
        border: 2px solid #CECECE;
        padding: 0;
    }

    .left {
        position: relative;
        width: 500px;
        min-height: 50px;
        padding: 15px;
        background: #E5E5EA;
        -webkit-border-radius: 10px;
        -moz-border-radius: 10px;
        border-radius: 25px;
        margin: 30px;
        float: left;
        clear: both;
        font-size: 18px;
    }

    .right {
        color: white;
        position: relative;
        width: 500px;
        min-height: 50px;
        padding: 15px;
        background: #2096FD;
        -webkit-border-radius: 10px;
        -moz-border-radius: 10px;
        border-radius: 25px;
        margin: 30px;
        float: right;
        clear: both;
    }

    .left:after {
        content: '';
        position: absolute;
        border-style: solid;
        border-width: 10px 34px 10px 0;
        border-color: transparent #E5E5EA;
        display: block;
        width: 0;
        z-index: 1;
        left: -28px;
        top: 40px;
    }

    .right:after {
        content: '';
        position: absolute;
        border-style: solid;
        border-width: 9px 0 9px 34px;
        border-color: transparent #2096FD;
        display: block;
        width: 0;
        z-index: 1;
        right: -28px;
        top: 36px;
    }

    .message, .date {
        min-width: 100%;
    }

    .message {
        font-size: 20px;
    }

    .date {
        text-align: right;
        font-size: 14px;
    }

    #messages {
        height: 50vh;
        overflow-y: scroll;
    }

    #send {
        border-top: 2px solid #CECECE;
        padding: 15px;
    }

    #message {
        box-sizing: border-box;
        border-radius: 20px;
        border: 2px solid #CECECE;
        width: 1000px;
        padding: 10px;
        outline: none;
        font-size: 20px;
        margin-right: 20px;
    }

    .sender {
        color: darkgreen;
        font-size: 16px;
    }

    .senderMe {
        color: yellow;
        font-size: 16px;
    }

    .info {
        margin: 20px 0;
        display: flex;
        justify-content: space-between;
    }

    #reciever {
        font-size: 30px;
        font-weight: bold;
    }
</style>

<script>
    $(document).ready(function () {
        var chat = $.connection.chatHub;
        $("#messages").scrollTop($("#messages")[0].scrollHeight);
        // Create a function that the hub can call back to display messages.
        chat.client.addNewMessage = function (name, message) {
            if (name == $('#myName').html().trim()) {
                $('#messages').append('<div class="right"><div class="senderMe">' + htmlEncode(name) +
                    '</div><div class="message">' + htmlEncode(message)
                    + '</div><div class="date"> ' + new Date().toLocaleString().replace(',', '') + '</div>');
            } else {
                $('#messages').append('<div class="left"><div class="sender">' + htmlEncode(name) +
                    '</div><div class="message">' + htmlEncode(message) + '</div><div class="date"> ' +
                    new Date().toLocaleString().replace(',', '') + '</div>');
            }
            $("#messages").scrollTop($("#messages")[0].scrollHeight);
        };
        // Set initial focus to message input box.
        $('#message').focus();
        // Start the connection.
        $.connection.hub.start().done(function () {
            $('#sendmessage').click(function () {
                // Call the Send method on the hub.
                if ($('#message').val() != '') {
                    chat.server.send($('#myName').html().trim(), $('#reciever').html().trim(), $('#recieverId').html().trim(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                } else alert("Please, write the message.")
            });
            chat.server.joinRoom($('#reciever').html().trim()).done(function () {
                console.log('hello')
            });
        });

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        /*создать кнопку выйти из чата и вызвать
        $.connection.hub.stop();*/
        $("#disconnect").click(function () {
            chat.server.leaveRoom($('#reciever').html().trim()).done(function () {
                console.log('bye')
            });
            $.connection.hub.stop();
            window.location.replace("http://localhost:51333/");
        });
    });

</script>

